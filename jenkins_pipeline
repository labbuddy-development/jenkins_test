pipeline {
    agent any

    environment {
        EC2_HOST = 'ec2-user@your-ec2-ip-or-dns'
        SSH_KEY = 'your-jenkins-ssh-credentials-id'
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scmGit(
                    branches: [[name: '*/main']],
                    extensions: [],
                    userRemoteConfigs: [[
                        credentialsId: '06166ada-1940-4823-9786-880934356bd8',
                        url: 'https://github.com/labbuddy-development/jenkins_test.git'
                    ]]
                )
            }
        }
        stage('Setup Virtual Environment and Install Dependencies') {
            steps {
                sh '''
                    python3 -m venv venv
                    . venv/bin/activate
                    pip install --upgrade pip
                    pip install fastapi jinja2 aiofiles uvicorn
                '''
            }
        }
        stage('Run Tests') {
            steps {
                sh '''
                    . venv/bin/activate
                    python test.py
                '''
            }
        }
        stage('Deploy') {
            steps {
                sshagent (credentials: [env.SSH_KEY]) {
                    sh '''
                        ssh -o StrictHostKeyChecking=no $EC2_HOST << 'EOF'
                            pkill uvicorn || true
                            cd /home/ec2-user/app || mkdir /home/ec2-user/app && cd /home/ec2-user/app
                            rm -rf *
                        EOF

                        scp -o StrictHostKeyChecking=no -r ./* $EC2_HOST:/home/ec2-user/app

                        ssh -o StrictHostKeyChecking=no $EC2_HOST << 'EOF'
                            cd /home/ec2-user/app
                            python3 -m venv venv
                            . venv/bin/activate
                            pip install --upgrade pip
                            pip install fastapi jinja2 aiofiles uvicorn
                            nohup uvicorn main:app --host 0.0.0.0 --port 8000 > app.log 2>&1 &
                        EOF
                    '''
                }
            }
        }
    }
}
